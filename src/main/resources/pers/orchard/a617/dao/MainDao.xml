<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.orchard.a617.dao.MainDao">
    <resultMap id="DeviceResultMap" type="pers.orchard.a617.bean.Device">
        <id column="id" jdbcType="INTEGER" property="ID"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="date_registered" jdbcType="DATE" property="dateRegistered"/>
        <result column="date_visited" jdbcType="DATE" property="dateVisited"/>
    </resultMap>

    <resultMap id="FolderResultMap" type="pers.orchard.a617.bean.photo.PhotoFolder">
        <id column="id" jdbcType="INTEGER" property="ID"/>
        <result column="id_parent" jdbcType="INTEGER" property="IDParent"/>
        <result column="id_created_device" jdbcType="INTEGER" property="IDCreatedDevice"/>
        <result column="id_cover" jdbcType="INTEGER" property="IDCover"/>
        <result column="name_storage" jdbcType="VARCHAR" property="nameStorage"/>
        <result column="name_display" jdbcType="VARCHAR" property="nameDisplay"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated"/>
        <result column="date_updated" jdbcType="TIMESTAMP" property="dateUpdated"/>
        <result column="count_updated" jdbcType="INTEGER" property="countUpdated"/>
    </resultMap>

    <resultMap id="PhotoResultMap" type="pers.orchard.a617.bean.photo.PhotoPhoto">
        <id column="id" jdbcType="INTEGER" property="ID"/>
        <result column="id_folder" jdbcType="INTEGER" property="IDFolder"/>
        <result column="ids_tag" jdbcType="VARCHAR" property="IDsTagTransfer"/>
        <result column="id_register_device" jdbcType="INTEGER" property="IDRegisterDevice"/>
        <result column="ids_storage_device" jdbcType="VARCHAR" property="IDsStorageDeviceTransfer"/>
        <result column="name_display" jdbcType="VARCHAR" property="nameDisplay"/>
        <result column="name_storage" jdbcType="VARCHAR" property="nameStorage"/>
        <result column="name_register" jdbcType="VARCHAR" property="nameRegister"/>
        <result column="name_folder" jdbcType="VARCHAR" property="nameFolder"/>
        <result column="names_tag" jdbcType="VARCHAR" property="namesTagTransfer"/>
        <result column="names_storage_device" jdbcType="VARCHAR" property="namesStorageDeviceTransfer"/>
        <result column="file_size" jdbcType="INTEGER" property="fileSize"/>
        <result column="width" jdbcType="INTEGER" property="width"/>
        <result column="height" jdbcType="INTEGER" property="height"/>
        <result column="mime_type" jdbcType="VARCHAR" property="mimeType"/>
        <result column="latitude" jdbcType="VARCHAR" property="latitude"/>
        <result column="longitude" jdbcType="VARCHAR" property="longitude"/>
        <result column="orientation" jdbcType="INTEGER" property="orientation"/>
        <result column="date_taken" jdbcType="TIMESTAMP" property="dateTaken"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="md5" jdbcType="VARCHAR" property="MD5"/>
        <result column="presence_local_full" jdbcType="BOOLEAN" property="presenceLocalFull"/>
        <result column="presence_local_thumb" jdbcType="BOOLEAN" property="presenceLocalThumb"/>
        <result column="presence_cloud_thumb" jdbcType="BOOLEAN" property="presenceCloudThumb"/>
        <result column="path_local_full" jdbcType="VARCHAR" property="pathLocalFull"/>
        <result column="path_local_thumb" jdbcType="VARCHAR" property="pathLocalThumb"/>
        <result column="date_registered" jdbcType="TIMESTAMP" property="dateRegistered"/>
        <result column="date_updated" jdbcType="TIMESTAMP" property="dateUpdated"/>
        <result column="count_updated" jdbcType="INTEGER" property="countUpdated"/>
    </resultMap>

    <resultMap id="LabelResultMap" type="pers.orchard.a617.bean.photo.PhotoTagPhoto">
        <id column="id" jdbcType="INTEGER" property="ID"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="date_created" jdbcType="TIMESTAMP" property="dateCreated"/>
        <result column="date_updated" jdbcType="TIMESTAMP" property="dateUpdated"/>
        <result column="count_updated" jdbcType="INTEGER" property="countUpdated"/>
    </resultMap>

    <resultMap id="VersionResultMap" type="pers.orchard.a617.bean.Version">
        <result column="device_version" jdbcType="INTEGER" property="deviceVersion"/>
        <result column="device_date" jdbcType="TIMESTAMP" property="deviceDateUpdated"/>
        <result column="folder_version" jdbcType="INTEGER" property="folderVersion"/>
        <result column="folder_date" jdbcType="TIMESTAMP" property="folderDateUpdated"/>
        <result column="photo_version" jdbcType="INTEGER" property="photoVersion"/>
        <result column="photo_date" jdbcType="TIMESTAMP" property="photoDateUpdated"/>
        <result column="label_version" jdbcType="INTEGER" property="labelVersion"/>
        <result column="label_date" jdbcType="TIMESTAMP" property="labelDateUpdated"/>
    </resultMap>

    <delete id="dropVersionTable">
        drop table if exists version;
    </delete>

    <delete id="dropDeviceTable">
        drop table if exists device;
    </delete>

    <delete id="dropFolderTable">
        drop table if exists photo_folder;
    </delete>

    <delete id="dropPhotoTable">
        drop table if exists photo_photo;
    </delete>

    <delete id="dropLabelTable">
        drop table if exists photo_label;
    </delete>

    <update id="createDeviceTable">
        CREATE TABLE `device`
        (
            `id`              int  NOT NULL,
            `name`            text NOT NULL,
            `date_registered` datetime DEFAULT CURRENT_TIMESTAMP,
            `date_visited`    datetime DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`id`),
            UNIQUE KEY `device_id_uindex` (`id`)
        ) ENGINE = InnoDB
          DEFAULT CHARSET = utf8mb4
          COLLATE = utf8mb4_0900_ai_ci;
    </update>

    <update id="createFolderTable">
        CREATE TABLE `photo_folder`
        (
            `id`                int      NOT NULL,
            `id_parent`         int      NOT NULL DEFAULT '0',
            `id_created_device` int      NOT NULL,
            `id_cover`          int               DEFAULT NULL,
            `name_storage`      text     NOT NULL,
            `name_display`      text     NOT NULL,
            `description`       text,
            `date_created`      datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `date_updated`      datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `count_updated`     int      NOT NULL DEFAULT '0',
            PRIMARY KEY (`id`),
            UNIQUE KEY `photo_folder_id_uindex` (`id`),
            KEY `id_parent` (`id_parent`),
            KEY `id_created_device` (`id_created_device`),
            KEY `id_cover` (`id_cover`),
            CONSTRAINT `photo_folder_ibfk_1` FOREIGN KEY (`id_parent`) REFERENCES `photo_folder` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE,
            CONSTRAINT `photo_folder_ibfk_2` FOREIGN KEY (`id_created_device`) REFERENCES `device` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE,
            CONSTRAINT `photo_folder_ibfk_3` FOREIGN KEY (`id_cover`) REFERENCES `photo_photo` (`id`) ON DELETE SET NULL
        ) ENGINE = InnoDB
          DEFAULT CHARSET = utf8mb4
          COLLATE = utf8mb4_0900_ai_ci;
    </update>

    <update id="createPhotoTable">
        CREATE TABLE `photo_photo`
        (
            `id`                   int      NOT NULL,
            `id_folder`            int      NOT NULL,
            `ids_tag`              json     NOT NULL,
            `id_register_device`   int      NOT NULL,
            `ids_storage_device`   json     NOT NULL,
            `name_display`         text,
            `name_storage`         text     NOT NULL,
            `name_register`        text     NOT NULL,
            `name_folder`          text     NOT NULL,
            `names_tag`            json     NOT NULL,
            `names_storage_device` json     NOT NULL,
            `file_size`            int               DEFAULT NULL,
            `width`                int               DEFAULT NULL,
            `height`               int               DEFAULT NULL,
            `mime_type`            text,
            `latitude`             text,
            `longitude`            text,
            `orientation`          int               DEFAULT NULL,
            `date_taken`           datetime          DEFAULT CURRENT_TIMESTAMP,
            `description`          text,
            `md5`                  text     NOT NULL,
            `presence_local_full`  tinyint(1)        DEFAULT '1',
            `presence_local_thumb` tinyint(1)        DEFAULT '0',
            `presence_cloud_thumb` tinyint(1)        DEFAULT '0',
            `path_local_full`      text,
            `path_local_thumb`     text,
            `date_registered`      datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `date_updated`         datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `count_updated`        int      NOT NULL DEFAULT '0',
            PRIMARY KEY (`id`),
            UNIQUE KEY `photo_photo_id_uindex` (`id`),
            KEY `id_folder` (`id_folder`),
            KEY `id_register_device` (`id_register_device`),
            CONSTRAINT `photo_photo_ibfk_1` FOREIGN KEY (`id_folder`) REFERENCES `photo_folder` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE,
            CONSTRAINT `photo_photo_ibfk_2` FOREIGN KEY (`id_register_device`) REFERENCES `device` (`id`) ON DELETE RESTRICT ON UPDATE CASCADE
        ) ENGINE = InnoDB
          DEFAULT CHARSET = utf8mb4
          COLLATE = utf8mb4_0900_ai_ci;
    </update>

    <update id="createLabelTable">
        CREATE TABLE `photo_label`
        (
            `id`            int          NOT NULL,
            `name`          varchar(256) NOT NULL,
            `date_created`  datetime     NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `date_updated`  datetime     NOT NULL DEFAULT CURRENT_TIMESTAMP,
            `count_updated` int          NOT NULL DEFAULT '0',
            PRIMARY KEY (`id`),
            UNIQUE KEY `photo_label_id_uindex` (`id`),
            UNIQUE KEY `photo_label_name_uindex` (`name`)
        ) ENGINE = InnoDB
          DEFAULT CHARSET = utf8mb4
          COLLATE = utf8mb4_0900_ai_ci;
    </update>

    <update id="createVersionTable">
        CREATE TABLE `version`
        (
            `name`         varchar(64) NOT NULL,
            `version`      int         NOT NULL DEFAULT '0',
            `date_updated` datetime             DEFAULT CURRENT_TIMESTAMP,
            PRIMARY KEY (`name`)
        ) ENGINE = InnoDB
          DEFAULT CHARSET = utf8mb4
          COLLATE = utf8mb4_0900_ai_ci;
    </update>

    <insert id="versionInitial">
        insert into version (name, version)
        VALUES ('device', 1),
               ('folder', 1),
               ('photo', 1),
               ('label', 1)
        on duplicate key update date_updated = current_timestamp,
                                version      = version + 1;
    </insert>

    <insert id="deviceInitial">
        insert into device (id, name, date_registered, date_visited)
        VALUES (0, 'system', current_timestamp, current_timestamp)
        on duplicate key update name            = 'system',
                                date_registered = current_timestamp,
                                date_registered = current_timestamp;
    </insert>

    <insert id="folderInitial">
        insert into photo_folder (id, id_parent, id_created_device, id_cover, name_storage, name_display, description,
                                  date_created, date_updated, count_updated)
        VALUES (0, 0, 0, null, 'root', 'root', '', current_timestamp, current_timestamp, 0)
        on duplicate key update id_parent         = 0,
                                id_created_device = 0,
                                id_cover          = null,
                                name_storage='root',
                                name_display= 'root',
                                description       = '',
                                date_created      = current_timestamp,
                                date_updated      = current_timestamp,
                                count_updated     = 0;
    </insert>

    <insert id="deviceInsertOne" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into device (id, name, date_registered, date_visited)
        values (#{device.ID}, #{device.name}, #{device.dateRegistered}, #{device.dateVisited})
    </insert>

    <insert id="deviceInsertSome" parameterType="photoFolder" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into device (id, name, date_registered, date_visited)
        values
        <foreach collection="list" item="folder" separator=", ">
            (#{device.ID}, #{device.name}, #{device.dateRegistered}, #{device.dateVisited})
        </foreach>
    </insert>

    <insert id="folderInsertOne" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into photo_folder (id, id_parent, id_created_device, id_cover, name_storage, name_display, description,
                                  date_created, date_updated, count_updated)
        VALUES (#{folder.ID}, #{folder.IDParent}, #{folder.IDCreatedDevice}, #{folder.IDCover}, #{folder.nameStorage},
                #{folder.nameDisplay}, #{folder.description}, #{folder.dateCreated}, #{folder.dateUpdated},
                #{folder.countUpdated})
    </insert>

    <insert id="folderInsertSome" parameterType="list" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into photo_folder (id, id_parent, id_created_device, id_cover, name_storage, name_display, description,
        date_created, date_updated, count_updated)
        VALUES
        <foreach collection="list" item="folder" separator=", ">
            (#{folder.ID}, #{folder.IDParent}, #{folder.IDCreatedDevice}, #{folder.IDCover}, #{folder.nameStorage},
            #{folder.nameDisplay}, #{folder.description}, #{folder.dateCreated}, #{folder.dateUpdated},
            #{folder.countUpdated})
        </foreach>
    </insert>

    <insert id="photoInsertOne" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into photo_photo (id, id_folder, ids_tag, id_register_device, ids_storage_device, name_display,
                                 name_storage,
                                 name_register, name_folder, names_tag, names_storage_device, file_size, width, height,
                                 mime_type, latitude, longitude, orientation, date_taken, description, md5,
                                 presence_local_full,
                                 presence_local_thumb, presence_cloud_thumb, path_local_full, path_local_thumb,
                                 date_registered,
                                 date_updated, count_updated)
        VALUES (#{photo.ID}, #{photo.IDFolder}, #{photo.IDsTagTransfer}, #{photo.IDRegisterDevice},
                #{photo.IDsStorageDeviceTransfer}, #{photo.nameDisplay}, #{photo.nameStorage}, #{photo.nameRegister},
                #{photo.nameFolder}, #{photo.namesTagTransfer}, #{photo.namesStorageDeviceTransfer}, #{photo.fileSize},
                #{photo.width}, #{photo.height}, #{photo.mimeType}, #{photo.latitude}, #{photo.longitude},
                #{photo.orientation}, #{photo.dateTaken}, #{photo.description}, #{photo.MD5},
                #{photo.presenceLocalFull}, #{photo.presenceLocalThumb}, #{photo.presenceCloudThumb},
                #{photo.pathLocalFull}, #{photo.pathLocalThumb}, #{photo.dateRegistered}, #{photo.dateRegistered},
                #{photo.countUpdated})
    </insert>

    <insert id="photoInsertSome" parameterType="list" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into photo_photo (id, id_folder, ids_tag, id_register_device, ids_storage_device, name_display,
        name_storage,
        name_register, name_folder, names_tag, names_storage_device, file_size, width, height,
        mime_type, latitude, longitude, orientation, date_taken, description, md5, presence_local_full,
        presence_local_thumb, presence_cloud_thumb, path_local_full, path_local_thumb, date_registered,
        date_updated, count_updated)
        VALUES
        <foreach collection="list" item="photo" separator=", ">
            (#{photo.ID},#{photo.IDFolder},#{photo.IDsTagTransfer},#{photo.IDRegisterDevice},#{photo.IDsStorageDeviceTransfer},#{photo.nameDisplay},#{photo.nameStorage},#{photo.nameRegister},#{photo.nameFolder},#{photo.namesTagTransfer},#{photo.namesStorageDeviceTransfer},#{photo.fileSize},#{photo.width},#{photo.height},#{photo.mimeType},#{photo.latitude},#{photo.longitude},#{photo.orientation},#{photo.dateTaken},#{photo.description},#{photo.MD5},#{photo.presenceLocalFull},#{photo.presenceLocalThumb},#{photo.presenceCloudThumb},#{photo.pathLocalFull},#{photo.pathLocalThumb},#{photo.dateRegistered},#{photo.dateRegistered},#{photo.countUpdated})
        </foreach>
    </insert>

    <insert id="labelInsertOne" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into photo_label (id, name, date_created, date_updated, count_updated)
        values (#{label.ID}, #{label.name}, #{label.dateCreated}, #{label.dateUpdated}, #{label.countUpdated})
    </insert>

    <insert id="labelInsertSome" parameterType="list" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into photo_label (id, name, date_created, date_updated, count_updated)
        values
        <foreach collection="list" item="label" separator=", ">
            (#{label.ID},#{label.name},#{label.dateCreated},#{label.dateUpdated},#{label.countUpdated})
        </foreach>
    </insert>

    <update id="deviceUpdate" parameterType="pers.orchard.a617.bean.Device">
        UPDATE device t
        SET t.name            = #{name},
            t.date_registered = #{dateRegistered},
            t.date_visited    = #{dateVisited}
        WHERE t.id = #{ID};
    </update>

    <update id="folderUpdate" parameterType="pers.orchard.a617.bean.photo.PhotoFolder">
        UPDATE photo_folder t
        SET t.id_parent         = #{IDParent},
            t.id_created_device = #{IDCreatedDevice},
            t.id_cover          = #{IDCover},
            t.name_storage      = #{nameStorage},
            t.name_display      = #{nameDisplay},
            t.description       = #{description},
            t.date_created      = #{dateCreated},
            t.date_updated      = #{dateUpdated},
            t.count_updated     = #{countUpdated}
        WHERE t.id = #{ID}
    </update>

    <update id="folderMove" parameterType="map">
        UPDATE photo_folder
        SET id_parent = #{parentID}
        WHERE id IN
        <foreach collection="IDs" item="ID" open="(" close=")" separator=", ">
            #{ID}
        </foreach>
    </update>

    <update id="folderRename" parameterType="map">
        UPDATE `photo_folder`
        SET `name_display` = #{nameDisplay}
        WHERE `id` = #{ID}
    </update>

    <update id="folderUpdateDescription">
        UPDATE `photo_folder`
        SET `description` = #{nameDisplay}
        WHERE `id` = #{ID}
    </update>

    <update id="photoUpdate" parameterType="pers.orchard.a617.bean.photo.PhotoPhoto">
        UPDATE photo_photo t
        SET t.id_folder            = #{IDFolder},
            t.ids_tag              = #{IDsTagTransfer},
            t.id_register_device   = #{IDRegisterDevice},
            t.ids_storage_device   = #{IDsStorageDeviceTransfer},
            t.name_display         = #{nameDisplay},
            t.name_storage         = #{nameStorage},
            t.name_register        = #{nameRegister},
            t.name_folder          = #{nameFolder},
            t.names_tag            = #{namesTagTransfer},
            t.names_storage_device = #{namesStorageDeviceTransfer},
            t.file_size            = #{fileSize},
            t.width                = #{width},
            t.height               = #{height},
            t.mime_type            = #{mimeType},
            t.latitude             = #{latitude},
            t.longitude            = #{longitude},
            t.orientation          = #{orientation},
            t.date_taken           = #{dateTaken},
            t.description          = #{description},
            t.md5                  = #{MD5},
            t.presence_local_full  = #{presenceLocalFull},
            t.presence_local_thumb = #{presenceLocalThumb},
            t.presence_cloud_thumb = #{presenceCloudThumb},
            t.path_local_full      = #{presenceLocalFull},
            t.path_local_thumb     = #{pathLocalThumb},
            t.date_registered      = #{dateRegistered},
            t.date_updated         = #{dateUpdated},
            t.count_updated        = #{countUpdated}
        WHERE t.id = #{ID};
    </update>

    <update id="photoMove" parameterType="map">
        UPDATE photo_photo
        SET id_folder = #{IDFolder}
        WHERE id IN
        <foreach collection="IDs" item="ID" open="(" close=")" separator=", ">
            #{ID}
        </foreach>
    </update>

    <update id="photoRename" parameterType="map">
        UPDATE `photo_photo`
        SET `name_display` = #{nameDisplay}
        WHERE `id` = #{ID}
    </update>

    <update id="photoUpdateDescription" parameterType="map">
        UPDATE `photo_photo`
        SET `description` = #{description}
        WHERE `id` = #{ID}
    </update>

    <update id="photoUpdateLabels" parameterType="map">
        UPDATE photo_photo
        SET ids_tag  = #{IDs},
            names_tag= #{names}
        WHERE id = #{ID}
    </update>

    <update id="photoUpdateMD5" parameterType="map">
        UPDATE photo_photo
        SET md5 = #{MD5}
        WHERE id = #{ID}
    </update>

    <update id="updateLabel" parameterType="pers.orchard.a617.bean.photo.PhotoTagPhoto">
        UPDATE photo_label t
        SET t.name          = #{name},
            t.date_created  = #{dateCreated},
            t.date_updated  = #{dateUpdated},
            t.count_updated = #{countUpdated}
        WHERE t.id = #{ID};
    </update>

    <update id="labelRename" parameterType="map">
        UPDATE `photo_label`
        SET `name` = #{name}
        WHERE `id` = #{ID}
    </update>

    <delete id="deleteSomeDevice" parameterType="list">
        DELETE FROM device WHERE id in
        <foreach collection="IDs" item="ID" open="(" close=")" separator=", ">
            #{ID}
        </foreach>
    </delete>

    <delete id="deleteSomeFolder">
        DELETE FROM photo_folder WHERE id in
        <foreach collection="IDs" item="ID" open="(" close=")" separator=", ">
            #{ID}
        </foreach>
    </delete>

    <delete id="deleteSomePhoto">
        DELETE FROM photo_photo WHERE id in
        <foreach collection="IDs" item="ID" open="(" close=")" separator=", ">
            #{ID}
        </foreach>
    </delete>

    <delete id="deleteSomeLabel">
        DELETE FROM photo_label WHERE id in
        <foreach collection="IDs" item="ID" open="(" close=")" separator=", ">
            #{ID}
        </foreach>
    </delete>

    <delete id="clearVersion">
        truncate table version;
    </delete>

    <delete id="clearDevice">
        delete
        from device
        where id != 0;
    </delete>

    <delete id="clearFolder">
        delete
        from photo_folder
        where id != 0;
    </delete>

    <delete id="clearPhoto">
        delete
        from photo_photo;
    </delete>

    <delete id="clearLabel">
        delete
        from photo_label;
    </delete>

    <select id="selectAllDevice" resultMap="DeviceResultMap">
        select *
        from device;
    </select>

    <select id="selectAllFolder" resultMap="FolderResultMap">
        select *
        from photo_folder;
    </select>

    <select id="selectAllPhoto" resultMap="PhotoResultMap">
        select *
        from photo_photo;
    </select>

    <select id="selectAllLabel" resultMap="LabelResultMap">
        select *
        from photo_label;
    </select>

    <select id="selectAllVersion" resultMap="VersionResultMap">
        select *
        from ((select version device_version, date_updated device_date
               from version
               where name = 'device') tabel1, (select version folder_version, date_updated folder_date
                                               from version
                                               where name = 'folder') table2,
            (select version photo_version, date_updated photo_date
             from version
             where name = 'photo') table3,
            (select version label_version, date_updated label_date
             from version
             where name = 'label') table4);
    </select>

    <update id="closeForeignCheck">
        SET foreign_key_checks = 0;
    </update>

    <update id="openForeignCheck">
        SET foreign_key_checks = 1;
    </update>
</mapper>